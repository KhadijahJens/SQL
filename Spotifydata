--First I created a table and downloaded Spotify data from Kaggle.

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Then I performed analytics on the data using SQL to answer questions

--What are the top 10 artist by populatrity?

SELECT distinct artist_name, popularity 
FROM BIT_DB.Spotifydata
ORDER BY popularity desc LIMIT 10;

--Which track has the most danceability?

SELECT track_name, artist_name, danceability
FROM BIT_DB.Spotifydata 
ORDER BY danceability desc
LIMIT 1;

--What is the average loudness of songs with a tempo greater than 100?

SELECT AVG(loudness) AS average 
FROM BIT_DB.Spotifydata
WHERE tempo > 100;

--Which artists have the shortest song and what is the time in seconds?

SELECT track_name, artist_name, duration_ms/1000 AS seconds
FROM BIT_DB.Spotifydata
ORDER BY duration_ms
LIMIT 5;

--List how many songs each artist has on the top 50 list from most to least.

SELECT artist_name, COUNT(artist_name)  AS number_of_songs 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY number_of_songs desc;

--Calculate the average popularity for the artists.
--Then, for every artist with an average popularity of 90 or above, show their name, average popularity, and label them as a “Top Star”.

WITH temptable AS (
SELECT Spotifydata.artist_name, AVG(Spotifydata.popularity) popularity 
FROM Spotifydata GROUP BY Spotifydata.artist_name
)
SELECT artist_name, popularity, 'Top Star' AS tag 
FROM temptable
WHERE popularity >= 90 ORDER BY popularity desc;


